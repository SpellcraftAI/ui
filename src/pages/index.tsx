import Head from "next/head";
import { type GetStaticProps, type GetStaticPropsContext } from "next";
import { useSpell, withSpellStyles } from "../hooks";

export function Home () {
  const spellResult = useSpell("purple text in small font");
  console.log({ spellResult });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <span className={spellResult}>
          hello world
        </span>
      </main>
    </>
  );
}

export default withSpellStyles(Home);

export const withStaticCache = (originalGetStaticProps?: GetStaticProps) => {
  const getStaticProps = async (context: GetStaticPropsContext) => {
    const { readCache } = await import("../lib/cache");
    const spellCache = readCache();
    console.log("withStaticCache", { spellCache });

    if (originalGetStaticProps == null) {
      return {
        props: {
          spellCache
        }
      };
    }

    const result = await originalGetStaticProps(context);
    return {
      ...result,
      props: {
        spellCache
      }
    };
  };

  return getStaticProps;
};

export const getStaticProps = withStaticCache();

// export const getStaticProps: GetStaticProps = async (): Promise<any> => {
//   const spellCache = readCache();
//   console.log("index.getStaticProps", { spellCache });

//   return {
//     props: {
//       a: 1,
//       spellCache
//     }
//   };
// };
